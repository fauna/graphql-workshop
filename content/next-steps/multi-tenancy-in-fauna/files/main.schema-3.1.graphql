type Owner {
  name: String!
  email: String! @unique
  stores: [Store]! @relation
  shopdbs: [ShopDB!]
}

type Store {
  name: String!
  email: String!
  paymentMethods: [String]
  categories: [String]
  owner: Owner!
}

type Query {
  findOwnerByEmail(email: String): Owner
  listOwners: [Owner] 
  countStores: Int @resolver(name: "GetStoreCount")
}

type Mutation {
  registerOwner(email: String!, password: String!, name: String!): Owner @resolver(name: "RegisterUser")
  login(email: String!, password: String!): Token @resolver(name: "LoginUser")
}

# Embeded type for returned token response
type Token @embedded {
  ttl: Time!
  secret: String!
  email: String!
  ownerId: String!
}

# Embeded type for child database
type ShopDB @embedded {
  shopId: String!
  secret: String!
}